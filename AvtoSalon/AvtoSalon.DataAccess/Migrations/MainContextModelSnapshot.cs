// <auto-generated />
using System;
using AvtoSalon.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AvtoSalon.DataAccess.Migrations
{
    [DbContext(typeof(MainContext))]
    partial class MainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AvtoSalon.DataAccess.Entities.AvtoSalonn", b =>
                {
                    b.Property<long>("SalonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SalonId"));

                    b.Property<DateTime>("RelasedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SalonName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SalonId");

                    b.HasIndex("SalonName")
                        .IsUnique();

                    b.ToTable("AvtoSalon", (string)null);
                });

            modelBuilder.Entity("AvtoSalon.DataAccess.Entities.Car", b =>
                {
                    b.Property<long>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CarId"));

                    b.Property<string>("CarName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("SalonId")
                        .HasColumnType("bigint");

                    b.HasKey("CarId");

                    b.HasIndex("CarName")
                        .IsUnique();

                    b.HasIndex("SalonId");

                    b.ToTable("Car", (string)null);
                });

            modelBuilder.Entity("AvtoSalon.DataAccess.Entities.Car", b =>
                {
                    b.HasOne("AvtoSalon.DataAccess.Entities.AvtoSalonn", "AvtoSalon")
                        .WithMany("Cars")
                        .HasForeignKey("SalonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AvtoSalon");
                });

            modelBuilder.Entity("AvtoSalon.DataAccess.Entities.AvtoSalonn", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
